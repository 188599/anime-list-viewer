// <auto-generated />
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AnimeListViewerDbContext))]
    [Migration("20250401215042_AddDurationColumnToAnime")]
    partial class AddDurationColumnToAnime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AggregatesModel.AnimeAggregate.Anime", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AverageScore")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("EpisodeCount")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("Genres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Season")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonYear")
                        .HasColumnType("int");

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Animes", (string)null);
                });

            modelBuilder.Entity("Domain.AggregatesModel.AnimeAggregate.Anime", b =>
                {
                    b.OwnsOne("Domain.AggregatesModel.AnimeAggregate.AnimeTitle", "Title", b1 =>
                        {
                            b1.Property<int>("AnimeId")
                                .HasColumnType("int");

                            b1.Property<string>("English")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Native")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Romaji")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimeId");

                            b1.ToTable("Animes");

                            b1.WithOwner()
                                .HasForeignKey("AnimeId");
                        });

                    b.Navigation("Title")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
